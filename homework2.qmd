---
title: "Homework 2"
author: "Jon Campbell"
format: pdf
editor: visual
---

```{r}
#| label: load-packages
#| message: false

library(tidyverse)
library(knitr)
library(PSweight)
```

## Part 1

### Question 1

```{r}
hsr <- read.table("data/hw2/HSR.txt", header = TRUE)
#p_z = P(Y(z)==1)
#target estimand is ATE p_1 - p_2
X <- apply(hsr[,c(1,3,4,5,6,7,8,12)], MARGIN = 2, factor)
Z <- factor(hsr$pg)
Y <- hsr$i_aqoc
```

#### a)

```{r}
ps_formula <- as.factor(pg) ~ i_age + as.factor(i_sex) + as.factor(i_race) + as.factor(i_educ) + as.factor(i_insu) + as.factor(i_drug) + as.factor(i_seve) + com_t + pcs_sd + mcs_sd

prop_scores <- glm(ps_formula, family = "binomial"
                   , data = hsr)$fitted.values

prop_score_summary <- SumStat(ps.formula = ps_formula
                            , weight = c('IPW','overlap')
                            ,data = hsr)
```

```{r}
#Estimated propensity Scores
cat(prop_scores)
```

```{r}
#checking balance via ASD
plot(prop_score_summary, metric = "ASD")
```

From the love plot we see that most of the covariates have an ASD above 0.1 when unweighted but perform much better with IPW. mcs_sd and severity2 are slightly above 0.1 and race2 is around 0.35 under IPW. The covariates are perfected balanced with overlap weighing.

```{r}
#Inverse Probability Weights 
IPW_weights <- ifelse(Z == 2, 1/prop_scores,1/(1-prop_scores))

#Normalized IPW 
IPW_weights_norm <- numeric(length(IPW_weights))
IPW_weights_norm[Z==2] = IPW_weights[Z==2]/sum(IPW_weights[Z==2])
IPW_weights_norm[Z==1] = IPW_weights[Z==1]/sum(IPW_weights[Z==1])
ggplot(data.frame(weights = IPW_weights
                  ,high=as.factor(ifelse(IPW_weights>15,1,0)))
       , aes(x = weights, fill = high)) +
  geom_histogram(bins = 20) +
  labs(title = "Distribution of IPW", x = "IPW")
```

Looking at he distribution of IPW there are `r sum(IPW_weights>17)` observations with high weights relative to the sample.

#### b)

```{r}
tibble(
  prop_score = prop_scores,
  trt = Z
) |>
  ggplot(aes(x = prop_score, fill = trt)) +
  geom_density(alpha = 0.5)
plot(prop_score_summary, metric = "ASD")
```

From the density plot of propensity scores by group, there is good overlap. The love plot shows good balance with overlap weighting and IPW weighting.

#### c)

```{r}
unweighted <- prop_score_summary$unweighted.sumstat[,1:2]
colnames(unweighted) <- c("unweighted.trt1", "unweighted.trt2")

ipw_weighted <- prop_score_summary$IPW.sumstat[,1:2]
colnames(ipw_weighted) <- c("IPW.trt1", "IPW.trt2")

overlap_weighted <- prop_score_summary$overlap.sumstat[,1:2]
colnames(overlap_weighted) <- c("overlap.trt1", "overlap.trt2")

tab1 <- cbind(unweighted, ipw_weighted, overlap_weighted) |> round(4)
tab1 |>
  kable()
```

#### d)

```{r}
Z <- ifelse(Z == 1,0,1)
ps.hsr <- as.factor(pg) ~ i_age + as.factor(i_sex) + as.factor(i_race) + as.factor(i_educ) + as.factor(i_insu) + as.factor(i_drug) + as.factor(i_seve) + com_t + pcs_sd + mcs_sd

ate.ipw.norm <- PSweight(ps.formula = ps.hsr, yname = "i_aqoc", data = hsr
                    , weight = "IPW")
ato.overlap <- PSweight(ps.formula = ps.hsr, yname = "i_aqoc", data = hsr
                    , weight = "overlap")
ate.ipw.nonnorm <- summary(lm(i_aqoc ~ pg, data = hsr, weights = IPW_weights))$coefficients[2,1:2]
results.ate <- rbind(summary(ate.ipw.norm, type = "DIF", contrast = c(-1,1))$estimates[,1:2],
      summary(ato.overlap, type = "DIF", contrast = c(-1,1))$estimates[,1:2],
      ate.ipw.nonnorm)
rownames(results.ate) <- c("ATE IPW Normalized", "ATO Overlap", "ATE NonNormalized")
results.ate |> round(4)

```



### Question 2

#### a)

```{r}
ps_formula <- as.factor(pg) ~ i_age + as.factor(i_sex) + as.factor(i_race) + as.factor(i_educ) + as.factor(i_insu) + as.factor(i_drug) + as.factor(i_seve) + com_t + pcs_sd + mcs_sd

prop_scores <- glm(ps_formula, family = "binomial"
                   , data = hsr)$fitted.values

hsr_subsetted <- subset(hsr, i_sex == 1)
hsr_subsetted$ipw_weights <- ifelse(hsr_subsetted$pg == 1, 1/prop_scores,1/(1-prop_scores))
att.subgroup <- summary(lm(i_aqoc ~ pg + i_age + i_sex + as.factor(i_race) + as.factor(i_educ) + as.factor(i_insu) + as.factor(i_drug) + as.factor(i_seve) + com_t + pcs_sd + mcs_sd, weights = ipw_weights, data = hsr_subsetted))$coefficients[2,1:2]

att.subgroup
```

#### b)

```{r}
ps_formula <- as.factor(pg) ~ i_age + as.factor(i_race) + as.factor(i_educ) + as.factor(i_insu) + as.factor(i_drug) + as.factor(i_seve) + com_t + pcs_sd + mcs_sd

prop_scores <- glm(ps_formula, family = "binomial"
                   , data = hsr)$fitted.values

hsr_subsetted <- subset(hsr, i_sex == 1)
hsr_subsetted$ipw_weights <- ifelse(hsr_subsetted$pg == 1, 1/prop_scores,1/(1-prop_scores))

att.subgroup <- summary(lm(i_aqoc ~ pg + i_age + i_sex + as.factor(i_race) + as.factor(i_educ) + as.factor(i_insu) + as.factor(i_drug) + as.factor(i_seve) + com_t + pcs_sd + mcs_sd, weights = ipw_weights, data = hsr_subsetted))$coefficients[2,1:2]
att.subgroup
```


#### c)

```{r}
hsr_subsetted <- subset(hsr, i_sex == 1)
ps.hsr <- as.factor(pg) ~ i_age + as.factor(i_race) + as.factor(i_educ) + as.factor(i_insu) + as.factor(i_drug) + as.factor(i_seve) + com_t + pcs_sd + mcs_sd


summary(PSweight(ps.formula = ps.hsr, yname = "i_aqoc", data = hsr_subsetted
                    , weight = "IPW"))$estimates[,1:2]
```

Option (c) is most likely the best way to estimate $E[Y(1)|V=1)] - E[Y(2)|V=1]$ because it adjusts the propensity score estimation to the subgroup. This helps with incorporating information specific to V=1

### Question 3
p_z = Pr(Y(z)=1)
fraction of patients satisfied with
the service in group z

Interest
Q = p_1(1-p_2)/p_2(1-p_1)

#### a)

```{r}
Z <- ifelse(hsr$pg == 1, 1,0)
X <- scale(as.matrix(hsr[,2:11]))
Y <- hsr$i_aqoc
delta <- summary(glm(Y~X + Z + X*Z, family = "binomial"))$coefficients["Z",1]
Q <- exp(delta)
Q
```

#### b)

```{r}

model <- glm(Y~X + Z + X*Z, family = "binomial")
p <- predict(model, type = "response")

phat_1 <- mean(p[Z ==1])
phat_2 <- mean(p[Z ==0])
Q <- (phat_1*(1-phat_2))/(phat_2*(1-phat_1))
Q
```

#### c)

```{r}
new_dat1 <-  model[["model"]] |> mutate(Z = rep(1,nrow(new_dat)))
new_dat2 <-  model[["model"]] |> mutate(Z = rep(0,nrow(new_dat)))

p1 <- predict(model, type = "response",newdata = new_dat1)
p2 <- predict(model, type = "response",newdata = new_dat2)
phat_1 <- mean(p1)
phat_2 <- mean(p2)
Q <- (phat_1*(1-phat_2))/(phat_2*(1-phat_1))
Q

```

#### d)

```{r}
prop_score = glm(Z ~ X, family = binomial)$fitted.values

q.prop_score = quantile(prop_score, c(0.2,0.4,0.6,0.8))
stratas = cut(prop_score, breaks = c(0,q.prop_score,1), labels = 1:5)
dat <- tibble(
  z = Z,
  x = X,
  y = Y,
  strat = stratas
)

estimates <- numeric(length = 5)
for (s in 1:5) {
  strat_dat <- dat[dat$strat==s,]
  mod <- glm(y~z, data = strat_dat, family = "binomial")
  estimates[s] = summary(mod)$coefficients["z",1]
}
exp(mean(estimates))
```

#### e)

```{r}
seq(0,1,length.out = 5)
```

## Part 2

```{r}
brscn <- read.table("data/hw2/brscn.txt", header = TRUE)
```

### Question 1

```{r}

```


