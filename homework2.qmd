---
title: "Homework 2"
author: "Jon Campbell"
format: pdf
editor: visual
---

```{r}
#| label: load-packages
#| message: false

library(tidyverse)
library(knitr)
library(PSweight)
library(lme4)
```

## Part 1

### Question 1

```{r}
hsr <- read.table("data/hw2/HSR.txt", header = TRUE)
hsr <- hsr |>
  mutate(pg = if_else(pg == 2,1,0)) |> #Z = 1 (group 2), 0 (Group 1)
  mutate(across(-c(i_age,com_t,mcs_sd,pcs_sd), factor)) |>
  rename(z = pg, y = i_aqoc)

```

#### a)

```{r}

ps.form <- z ~ i_age + i_sex + i_race + i_educ + i_insu + i_drug + i_seve + com_t + pcs_sd + mcs_sd

pscore_summary <- SumStat(ps.formula = ps.form
                            , weight = c('IPW','overlap')
                            ,data = hsr)
hsr$pscore <- pscore_summary$propensity[,2]

ggplot(hsr, aes(x = pscore, fill = z)) +
  geom_density(alpha = 0.5) +
  labs(title = "Distribution of Propensity Scores",
       subtitle = "By Treatment Group (Group 2 = Blue, Group 1 = Red",
       x = "Propensity Scores",
       fill = "Treatment Group")

plot(pscore_summary, metric = "ASD")

```

There is pretty good overlap from the distribution of propensity scores by treatment group.
From the love plot we see that most of the covariates have an ASD above 0.1 when unweighted but perform much better with IPW. mcs_sd and severity2 are slightly above 0.1 and race2 is around 0.35 under IPW. The covariates are perfected balanced with overlap weighing.


```{r}
#With trimming set at 0.05
hsr.trim <- PStrim(ps.formula = ps.form
                   ,data = hsr, delta = 0.1)[["data"]] |>
  ungroup()

pscore_summary <- SumStat(ps.formula = ps.form
                          , weight = c('IPW','overlap')
                          ,data = hsr.trim)

hsr.trim <- hsr.trim |>
  mutate(pscore = pscore_summary$propensity[,2])
```


#### b)

```{r}
ggplot(hsr.trim, aes(x = pscore, fill = z)) +
  geom_density(alpha = 0.5) +
  labs(title = "Distribution of Propensity Scores (Trimmed)",
       subtitle = "By Treatment Group (Group 2 = Blue, Group 1 = Red",
       x = "Propensity Scores",
       fill = "Treatment Group")

#checking balance via ASD
plot(pscore_summary, metric = "ASD")
```

From the love plot we see better performance from IPW weighting after trimming 5% of the data. All the ASDs are below 0.1. Not much change in overlap, it is still good.


#### c)

```{r}
#Inverse Probability Weights 
hsr.trim <- hsr.trim |>
  mutate(w = ifelse(z == 1, 1/pscore, 1/(1-pscore)))



table1 <- cbind(
  pscore_summary[["unweighted.sumstat"]][,1:2],
  pscore_summary[["IPW.sumstat"]][,1:2],
  pscore_summary[["overlap.sumstat"]][,1:2]
)
colnames(table1) = c("Original.0", "Original.trt"
                     ,"IPW.0","IPW.trt"
                     , "Overlap.0","Overlap.trt")
table1 |>round(4)
```

#### d)

```{r}

hsr.trimmed <- data.frame(hsr.trim) |>
  mutate(across(c(1,3:8,12),function(x){as.numeric(levels(x))[x]})) |>
  mutate(across(c(2,9:11),scale))

ate.ipw<- summary(lm(y ~ z,data=hsr.trimmed
                     ,weights=hsr.trimmed$w))$coefficients[2,1:2]

ate.ipw.norm <- summary(PSweight(ps.formula = ps.form, yname = "y"
                                 ,data = hsr.trimmed, weight = "IPW"))$estimates[,1:2]
ato <- summary(PSweight(ps.formula = ps.form, yname = "y", data = hsr.trimmed
                    , weight = "overlap"))$estimates[,1:2]

res <- rbind(
  ate.ipw,
  ate.ipw.norm,
  ato
)
rownames(res) <- c("ATE NonNormalized","ATE Normalized", "ATO")
res
```



### Question 2

#### a)

```{r}

ps.form <- z ~ i_age + i_sex + i_race + i_educ + i_insu + i_drug + i_seve + com_t + pcs_sd + mcs_sd

ps <- glm(ps.form, family = "binomial"
                   , data = hsr.trim)$fitted.values
hsr.trim <- hsr.trim |> mutate(pscore = ps)
hsr_subsetted <- subset(hsr.trim, i_sex == 1)

hsr_subsetted$w <- ifelse(hsr_subsetted$z == 1, 1/hsr_subsetted$pscore
                          , 1/(1-hsr_subsetted$pscore))
z <- as.numeric(levels(hsr_subsetted$z))[hsr_subsetted$z]
y <- as.numeric(levels(hsr_subsetted$y))[hsr_subsetted$y]
w <- hsr_subsetted$w

att.subgroup <- mean(y*z*w - y*(1-z)*w)
att.subgroup
```

#### b)

```{r}
ps.form <- z ~ i_age + i_race + i_educ + i_insu + i_drug + i_seve + com_t + pcs_sd + mcs_sd

ps <- glm(ps.form, family = "binomial"
                   , data = hsr.trim)$fitted.values

hsr.trim <- hsr.trim |> mutate(pscore = ps)
hsr_subsetted <- subset(hsr.trim, i_sex == 1)

hsr_subsetted$w <- ifelse(hsr_subsetted$z == 1, 1/hsr_subsetted$pscore
                          , 1/(1-hsr_subsetted$pscore))
z <- as.numeric(levels(hsr_subsetted$z))[hsr_subsetted$z]
y <- as.numeric(levels(hsr_subsetted$y))[hsr_subsetted$y]
w <- hsr_subsetted$w

att.subgroup <- mean(y*z*w - y*(1-z)*w)
att.subgroup
```


#### c)

```{r}

hsr_subsetted <- subset(hsr.trim, i_sex == 1)

ps.form <- z ~ i_age + i_race + i_educ + i_insu + i_drug + i_seve + com_t + pcs_sd + mcs_sd

ps <- glm(ps.form, family = "binomial"
                   , data = hsr_subsetted)$fitted.values

hsr_subsetted <- hsr_subsetted |> mutate(pscore = ps)

hsr_subsetted$w <- ifelse(hsr_subsetted$z == 1, 1/hsr_subsetted$pscore
                          , 1/(1-hsr_subsetted$pscore))
z <- as.numeric(levels(hsr_subsetted$z))[hsr_subsetted$z]
y <- as.numeric(levels(hsr_subsetted$y))[hsr_subsetted$y]
w <- hsr_subsetted$w

att.subgroup <- mean(y*z*w - y*(1-z)*w)
att.subgroup
```

Option (c) is most likely the best way to estimate $E[Y(1)|V=1)] - E[Y(2)|V=1]$ because it adjusts the propensity score estimation to the subgroup. This helps with incorporating information specific to V=1.


### Question 3





## Part 2

```{r}
brscn <- read.table("data/hw2/brscn.txt", header = TRUE)

str(brscn)
brscn.fact <- brscn |>
  mutate(across(2:12,factor))
str(brscn.fact)
```

### Question 1

```{r}

form <- black ~ agecat + mcaid + poor + cendivis + model + taxstat + affil + blprop + blproplogit + (1|group)

#test <- PSweight_cl(form, yname = "brscn", data = brscn)
test <- glmer(form, family = "binomial", data = brscn, verbose = 1)#$fitted.values
#glmer ; weighted average for each cluster
#test$coefficients
pscores <- predict(test, type = "response")
pscores

test2 <- glmer(form, family = "binomial", data = brscn.fact, verbose = 1)
test3 <- PSweight_cl(ps.formula = form,yname = "brscn"
                     ,data = brscn.fact,weight = "IPW", bootstrap = TRUE)

```







