---
title: "Homework1"
author: "Jon Campbell"
format: pdf
editor: visual
---

```{r}
#| label: load-packages
#| message: false

library(tidyverse)
```

## Part 1

### Question 1

```{r}
Y_obs <- c(8.62,1.48,8.93,9.57,2.65,7.3,.06,1.72,2.19,7.32,7.53,7.62)
Z <- c(rep(0,6), rep(1,6))
```

#### a)

```{r}
Y_obs <- c(8.62,1.48,8.93,9.57,2.65,7.3,.06,1.72,2.19,7.32,7.53,7.62)
Z <- c(rep(0,6), rep(1,6))

tstat_obs <- mean(Y_obs[Z == 1]) - mean(Y_obs[Z == 0])

ind_combos <- combn(1:12,6)
tstats <- vector(mode = "double",length = ncol(ind_combos))

for (i in 1:ncol(ind_combos)) {
  Zperm <- rep(0,12)
  Zperm[ind_combos[,i]] = 1
  tstats[i] = mean(Y_obs[Zperm==1]) - mean(Y_obs[Zperm==0])
}

pval <- mean(abs(tstats) >= abs(tstat_obs))
```

The two-tailed p-value is `r round(pval,4)`.

#### b)

```{r}
set.seed(2929)
sampled_tstats <- sample(tstats, size = 1000, replace = TRUE)
pval_1000 <- mean(abs(sampled_tstats) >= abs(tstat_obs))
```

The two-tailed p-value from 1000 samples from the distribution under the Sharp Null Hypothesis is `r round(pval_1000,4)`.

#### c)

```{r}
ttest_pval <- t.test(Y_obs[Z==1], Y_obs[Z==0],var.equal = TRUE)$p.value
```

The p-value using a t-test is `r round(ttest_pval,4)`.

#### d)

(b)'s approximation of (a) is part of the assignment mechanism component of the potential outcome framework as it draws from the distribution of all possible treatment assignments.

(c)'s approximation of (a) falls under the probabilistic model component of the potential outcome framework as it assumes the data in both groups is normally distributed with equal variance.

### Question 2

#### a)

```{r}
Y_obs_orig <- matrix(Y_obs,nrow = 6)
colnames(Y_obs_orig) <- c("0", "1")

combos <-expand.grid(pair1 = 0:1,pair2 = 0:1, pair3 = 0:1
                     ,pair4 = 0:1,pair5 = 0:1, pair6 = 0:1)
```

```{r}
tstats <- vector(mode = "double",length = nrow(combos))
for (i in 1:nrow(combos)) {
  Y_obs_perm <- Y_obs_orig
  ind <- which(combos[i,] == 1)
  Y_obs_perm[ind,] = Y_obs_perm[ind,c(2,1)]
  tstats[i] = mean(Y_obs_perm[,2]) - mean(Y_obs_perm[,1])
}

pval <- mean(abs(tstats) >= abs(tstat_obs))
```

The p-value from randomizing within pairs is `r round(pval,4)`.

#### b)

```{r}
set.seed(2121)
sampled_tstats <- sample(tstats, size = 1000, replace = TRUE)
pval_1000 <- mean(abs(sampled_tstats) >= abs(tstat_obs))
```

The p-value from sampling is `r round(pval_1000,4)`.

#### c)

```{r}
ttest_pval <- t.test(Y_obs[Z==1], Y_obs[Z==0], var.equal = TRUE, paired = TRUE)
```

Using a paired t-test the p-value is `r round(ttest_pval$p.value,4)`.

#### d)

Part (2b) is a part of the assignment mechanism as it makes sure $Z\perp X$ through randomization.

Part (2c) is a part of the probabilistic model just like question 1.

### Question 3

$$
\begin{aligned}
Y_i^{obs} = Z_iY_i(1)+(1-Z_i)Y_i(0)\\
\hat{\tau}= \frac{1}{n_1}\sum_{i=1}^nZ_iY_i^{obs}-\frac{1}{n_0}\sum_{i=1}^n(1-Z_i)Y_i^{obs}\\
\hat{\tau}=\frac{1}{n_1}\sum_{i=1}^nZ_iY_i(1)-\frac{1}{n_0}\sum_{i=1}^n(1-Z_i)Y_i(0)\\
\text{Under CRE}~Z_i\perp{Y_i(0),Y_i(1)}~\text{and}~E[Y(z)]=Y(z)\\
E[\hat{\tau}] = \frac{1}{n_1}\sum_{i=1}^nE[Z_i]Y_i(1)-\frac{1}{n_0}\sum_{i=1}^nE(1-Z_i)Y_i(0)\\
= \frac{1}{n_1}\sum_{i=1}^n\frac{n_1}{n}Y_i(1)-\frac{1}{n_0}\sum_{i=1}^n\frac{n_0}{n}Y_i(0)\\
=\frac{1}{n_1}\sum_{i=1}^nY_i(1)-\frac{1}{n_0}\sum_{i=1}^nY_i(0) = \tau
\end{aligned}
$$

### Question 4

## Part 2

### Question 1

```{r}
pot_outcomes <- matrix(c(35, 40, 45 ,55, 55 ,55, 65, 70, 25, 30, 45, 55, 60, 65, 75, 80, 35, 40, 55, 50, 35, 40, 65, 70), ncol = 2, byrow = TRUE)
colnames(pot_outcomes) <- c("Y1_pot","Y0_pot")
sample_ind = combn(1:12, m =4, simplify = FALSE)
rand_assign_ind = combn(1:4, m =2, simplify = FALSE)
```

```{r}
diffs <- matrix(NA, nrow = length(sample_ind), ncol = length(rand_assign_ind))

for (samp in seq_along(sample_ind)) {
  sample <- pot_outcomes[sample_ind[[samp]],]
  
  for (i in seq_along(rand_assign_ind)) {
    
    Y1_obs <- sample[rand_assign_ind[[i]],"Y1_pot"]
    Y0_obs <- sample[-rand_assign_ind[[i]],"Y0_pot"]
    
    difference <- mean(Y1_obs) - mean(Y0_obs)
    
    diffs[samp,i] <- difference
  }
}
var(as.vector(diffs))
```

```{r}
var1 = var(pot_outcomes[,"Y1_pot"])
var0 = var(pot_outcomes[,"Y0_pot"])

var01 = sum((pot_outcomes[,"Y1_pot"] -pot_outcomes[,"Y0_pot"] - (mean(pot_outcomes[,"Y1_pot"])-mean(pot_outcomes[,"Y0_pot"])))^2)/11

var0/6+var1/6-var01/12
```

### Question 2

```{r}
diffs <- matrix(NA, nrow = length(sample_ind), ncol = length(rand_assign_ind))

for (samp in seq_along(sample_ind)) {
  for (i in seq_along(rand_assign_ind)) {
    
    sample <- pot_outcomes[sample_ind[[samp]],]
    Y1_obs <- sample[rand_assign_ind[[i]],"Y1_pot"]
    Y0_obs <- sample[-rand_assign_ind[[i]],"Y0_pot"]
    difference <- mean(Y1_obs) - mean(Y0_obs)
    
    diffs[samp,i] <- difference
  }
}
var(apply(diffs, MARGIN = 1,FUN = sum))
```

## Part 3

```{r}
bestair <- readxl::read_xlsx("bestair640-1.xlsx", sheet = "data")
for (i in seq_along(bestair)) {
  y = pull(bestair[,i])
  m = mean(y, na.rm = TRUE)
  y = ifelse(is.na(y), m, y)
  bestair[,i] = y
}
```

### Question 1

```{r}
baselines <- c("gender","age","bmi",
 "race","sbp_baseline","dbp_baseline","ahi_baseline","ess_baseline")
ASDs = matrix(NA, nrow = 1, ncol = 8)
colnames(ASDs) <- baselines
Z <- bestair$treatment_arm
for (bl in baselines) {
  X <- pull(bestair[,bl])
  s1 <- var(X[Z==1])
  s0 <- var(X[Z==0])
  diff_sum <- sum(X*Z)/sum(Z)-sum(X*(1-Z))/sum(1-Z)
  asd <- diff_sum/sqrt(s1+s0)
  ASDs[,bl] <- asd
  
}
```

```{r}
#love plot
asd_dat <- tibble(
  bls = baselines,
  asd = ASDs[1,]
)
ggplot(asd_dat,aes(x = asd, y = bls)) +
  geom_point() +
  labs(title = "Love Plot Bestair ASDs"
       ,y = "Baseline Measure"
       ,x = "ASD")
```

### Question 2

```{r}
Z <- bestair$treatment_arm
Y <- bestair$sbp_6mo
tau_unadj <- mean(Y[Z==1]) - mean(Y[Z==0])
tau_unadj
```

```{r}
bestair_centered <- bestair|>
  mutate(across(gender:ess_baseline, ~ .x-mean(.x)))

ancova1 <- lm(formula = sbp_6mo~.,data = bestair_centered)
tau_adj_anc1 <- ancova1$coefficients["treatment_arm"]

ancova2 <- lm(formula = sbp_6mo~.^2,data = bestair_centered)
tau_adj_anc2 <- ancova2$coefficients["treatment_arm"]
```

```{r}
X_mat <- as.matrix(bestair_centered[,2:9])
as.vector(ancova1$residuals)
```

```{r}
hw_se_anc1 <-sqrt(car::hccm(ancova1
                            ,type = "hc2")["treatment_arm","treatment_arm"])
#sqrt(car::hccm(ancova2, type = "hc0")["treatment_arm","treatment_arm"])
```

```{r}

```

### Question 3

```{r}
bestair_hyperten <- bestair_centered |>
  mutate(resist_hyperten = if_else(sbp_6mo>=130,1,0)) |>
  select(treatment_arm:ess_baseline,resist_hyperten)
```

#### a)

```{r}
Z <- bestair$treatment_arm
Y <- bestair_hyperten$resist_hyperten
mean(Y[Z==1]) - mean(Y[Z==0])
bin_ols <- lm(resist_hyperten~., data = bestair_hyperten)
bin_ols$coefficients["treatment_arm"]

bin_ols_inter <- lm(resist_hyperten~.^2, data = bestair_hyperten)
bin_ols_inter$coefficients["treatment_arm"]
```

#### b)
